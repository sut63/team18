basePath: /api/v1
definitions:
  ent.CheckIn:
    properties:
      checkin_date:
        description: CheckinDate holds the value of the "checkin_date" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CheckInEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CheckInQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      mobile_key:
        description: MobileKey holds the value of the "mobile_key" field.
        type: string
      person_number:
        description: PersonNumber holds the value of the "person_number" field.
        type: string
      phone_number:
        description: PhoneNumber holds the value of the "phone_number" field.
        type: string
    type: object
  ent.CheckInEdges:
    properties:
      checkouts:
        $ref: '#/definitions/ent.Checkout'
        description: Checkouts holds the value of the checkouts edge.
        type: object
      counter:
        $ref: '#/definitions/ent.CounterStaff'
        description: Counter holds the value of the counter edge.
        type: object
      customer:
        $ref: '#/definitions/ent.Customer'
        description: Customer holds the value of the customer edge.
        type: object
      dataroom:
        $ref: '#/definitions/ent.DataRoom'
        description: Dataroom holds the value of the dataroom edge.
        type: object
      reserveroom:
        $ref: '#/definitions/ent.ReserveRoom'
        description: Reserveroom holds the value of the reserveroom edge.
        type: object
      status:
        $ref: '#/definitions/ent.StatusCheckIn'
        description: Status holds the value of the status edge.
        type: object
    type: object
  ent.Checkout:
    properties:
      checkout_date:
        description: CheckoutDate holds the value of the "checkout_date" field.
        type: string
      comment:
        description: Comment holds the value of the "comment" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CheckoutEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CheckoutQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      identity_card:
        description: IdentityCard holds the value of the "identity_card" field.
        type: string
      price:
        description: Price holds the value of the "price" field.
        type: number
    type: object
  ent.CheckoutEdges:
    properties:
      checkins:
        $ref: '#/definitions/ent.CheckIn'
        description: Checkins holds the value of the checkins edge.
        type: object
      counterstaffs:
        $ref: '#/definitions/ent.CounterStaff'
        description: Counterstaffs holds the value of the counterstaffs edge.
        type: object
      statusopinion:
        $ref: '#/definitions/ent.StatusOpinion'
        description: Statusopinion holds the value of the statusopinion edge.
        type: object
      statuss:
        $ref: '#/definitions/ent.Status'
        description: Statuss holds the value of the statuss edge.
        type: object
    type: object
  ent.CounterStaff:
    properties:
      edges:
        $ref: '#/definitions/ent.CounterStaffEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CounterStaffQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
    type: object
  ent.CounterStaffEdges:
    properties:
      checkins:
        description: Checkins holds the value of the checkins edge.
        items:
          $ref: '#/definitions/ent.CheckIn'
        type: array
      checkouts:
        description: Checkouts holds the value of the checkouts edge.
        items:
          $ref: '#/definitions/ent.Checkout'
        type: array
      details:
        description: Details holds the value of the details edge.
        items:
          $ref: '#/definitions/ent.FurnitureDetail'
        type: array
    type: object
  ent.Customer:
    properties:
      edges:
        $ref: '#/definitions/ent.CustomerEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CustomerQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
    type: object
  ent.CustomerEdges:
    properties:
      checkins:
        description: Checkins holds the value of the checkins edge.
        items:
          $ref: '#/definitions/ent.CheckIn'
        type: array
      fixs:
        description: Fixs holds the value of the fixs edge.
        items:
          $ref: '#/definitions/ent.FixRoom'
        type: array
      reserves:
        description: Reserves holds the value of the reserves edge.
        items:
          $ref: '#/definitions/ent.ReserveRoom'
        type: array
    type: object
  ent.DataRoom:
    properties:
      edges:
        $ref: '#/definitions/ent.DataRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the DataRoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      price:
        description: Price holds the value of the "price" field.
        type: number
      roomdetail:
        description: Roomdetail holds the value of the "roomdetail" field.
        type: string
      roomnumber:
        description: Roomnumber holds the value of the "roomnumber" field.
        type: string
    type: object
  ent.DataRoomEdges:
    properties:
      checkins:
        description: Checkins holds the value of the checkins edge.
        items:
          $ref: '#/definitions/ent.CheckIn'
        type: array
      details:
        description: Details holds the value of the details edge.
        items:
          $ref: '#/definitions/ent.FurnitureDetail'
        type: array
      fixs:
        description: Fixs holds the value of the fixs edge.
        items:
          $ref: '#/definitions/ent.FixRoom'
        type: array
      promotion:
        $ref: '#/definitions/ent.Promotion'
        description: Promotion holds the value of the promotion edge.
        type: object
      reserves:
        description: Reserves holds the value of the reserves edge.
        items:
          $ref: '#/definitions/ent.ReserveRoom'
        type: array
      statusroom:
        $ref: '#/definitions/ent.StatusRoom'
        description: Statusroom holds the value of the statusroom edge.
        type: object
      typeroom:
        $ref: '#/definitions/ent.TypeRoom'
        description: Typeroom holds the value of the typeroom edge.
        type: object
    type: object
  ent.FixRoom:
    properties:
      edges:
        $ref: '#/definitions/ent.FixRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FixRoomQuery when eager-loading is set.
        type: object
      facebook:
        description: Facebook holds the value of the "facebook" field.
        type: string
      fix_detail:
        description: FixDetail holds the value of the "fix_detail" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      phone_number:
        description: PhoneNumber holds the value of the "phone_number" field.
        type: string
    type: object
  ent.FixRoomEdges:
    properties:
      customer:
        $ref: '#/definitions/ent.Customer'
        description: Customer holds the value of the customer edge.
        type: object
      furnitureDetail:
        $ref: '#/definitions/ent.FurnitureDetail'
        description: FurnitureDetail holds the value of the furnitureDetail edge.
        type: object
      room:
        $ref: '#/definitions/ent.DataRoom'
        description: Room holds the value of the room edge.
        type: object
    type: object
  ent.Furniture:
    properties:
      edges:
        $ref: '#/definitions/ent.FurnitureEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FurnitureQuery when eager-loading is set.
        type: object
      furniture_name:
        description: FurnitureName holds the value of the "furniture_name" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.FurnitureDetail:
    properties:
      date_add:
        description: DateAdd holds the value of the "date_add" field.
        type: string
      detail:
        description: Detail holds the value of the "detail" field.
        type: string
      edges:
        $ref: '#/definitions/ent.FurnitureDetailEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FurnitureDetailQuery when eager-loading is set.
        type: object
      furniture_amount:
        description: FurnitureAmount holds the value of the "furniture_amount" field.
        type: integer
      furniture_colour:
        description: FurnitureColour holds the value of the "furniture_colour" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.FurnitureDetailEdges:
    properties:
      counterstaffs:
        $ref: '#/definitions/ent.CounterStaff'
        description: Counterstaffs holds the value of the counterstaffs edge.
        type: object
      fixs:
        description: Fixs holds the value of the fixs edge.
        items:
          $ref: '#/definitions/ent.FixRoom'
        type: array
      furnitures:
        $ref: '#/definitions/ent.Furniture'
        description: Furnitures holds the value of the furnitures edge.
        type: object
      rooms:
        $ref: '#/definitions/ent.DataRoom'
        description: Rooms holds the value of the rooms edge.
        type: object
      types:
        $ref: '#/definitions/ent.FurnitureType'
        description: Types holds the value of the types edge.
        type: object
    type: object
  ent.FurnitureEdges:
    properties:
      details:
        description: Details holds the value of the details edge.
        items:
          $ref: '#/definitions/ent.FurnitureDetail'
        type: array
    type: object
  ent.FurnitureType:
    properties:
      edges:
        $ref: '#/definitions/ent.FurnitureTypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the FurnitureTypeQuery when eager-loading is set.
        type: object
      furniture_type:
        description: FurnitureType holds the value of the "furniture_type" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.FurnitureTypeEdges:
    properties:
      details:
        description: Details holds the value of the details edge.
        items:
          $ref: '#/definitions/ent.FurnitureDetail'
        type: array
    type: object
  ent.Promotion:
    properties:
      discount:
        description: Discount holds the value of the "discount" field.
        type: number
      edges:
        $ref: '#/definitions/ent.PromotionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PromotionQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      promotion_name:
        description: PromotionName holds the value of the "promotion_name" field.
        type: string
    type: object
  ent.PromotionEdges:
    properties:
      datarooms:
        description: Datarooms holds the value of the datarooms edge.
        items:
          $ref: '#/definitions/ent.DataRoom'
        type: array
      reserves:
        description: Reserves holds the value of the reserves edge.
        items:
          $ref: '#/definitions/ent.ReserveRoom'
        type: array
    type: object
  ent.ReserveRoom:
    properties:
      amount:
        description: Amount holds the value of the "amount" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.ReserveRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ReserveRoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      net_price:
        description: NetPrice holds the value of the "net_price" field.
        type: number
      phone_number:
        description: PhoneNumber holds the value of the "phone_number" field.
        type: string
      request:
        description: Request holds the value of the "request" field.
        type: string
      reserve_date:
        description: ReserveDate holds the value of the "reserve_date" field.
        type: string
    type: object
  ent.ReserveRoomEdges:
    properties:
      checkins:
        description: Checkins holds the value of the checkins edge.
        items:
          $ref: '#/definitions/ent.CheckIn'
        type: array
      customer:
        $ref: '#/definitions/ent.Customer'
        description: Customer holds the value of the customer edge.
        type: object
      promotion:
        $ref: '#/definitions/ent.Promotion'
        description: Promotion holds the value of the promotion edge.
        type: object
      room:
        $ref: '#/definitions/ent.DataRoom'
        description: Room holds the value of the room edge.
        type: object
      status:
        $ref: '#/definitions/ent.StatusReserve'
        description: Status holds the value of the status edge.
        type: object
    type: object
  ent.Status:
    properties:
      description:
        description: Description holds the value of the "description" field.
        type: string
      edges:
        $ref: '#/definitions/ent.StatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.StatusCheckIn:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusCheckInEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusCheckInQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      status_name:
        description: StatusName holds the value of the "status_name" field.
        type: string
    type: object
  ent.StatusCheckInEdges:
    properties:
      checkins:
        description: Checkins holds the value of the checkins edge.
        items:
          $ref: '#/definitions/ent.CheckIn'
        type: array
    type: object
  ent.StatusEdges:
    properties:
      checkouts:
        description: Checkouts holds the value of the checkouts edge.
        items:
          $ref: '#/definitions/ent.Checkout'
        type: array
    type: object
  ent.StatusOpinion:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusOpinionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusOpinionQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      opinion:
        description: Opinion holds the value of the "opinion" field.
        type: string
    type: object
  ent.StatusOpinionEdges:
    properties:
      checkouts:
        description: Checkouts holds the value of the checkouts edge.
        items:
          $ref: '#/definitions/ent.Checkout'
        type: array
    type: object
  ent.StatusReserve:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusReserveEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusReserveQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      status_name:
        description: StatusName holds the value of the "status_name" field.
        type: string
    type: object
  ent.StatusReserveEdges:
    properties:
      reserves:
        description: Reserves holds the value of the reserves edge.
        items:
          $ref: '#/definitions/ent.ReserveRoom'
        type: array
    type: object
  ent.StatusRoom:
    properties:
      edges:
        $ref: '#/definitions/ent.StatusRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusRoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      status_name:
        description: StatusName holds the value of the "status_name" field.
        type: string
    type: object
  ent.StatusRoomEdges:
    properties:
      datarooms:
        description: Datarooms holds the value of the datarooms edge.
        items:
          $ref: '#/definitions/ent.DataRoom'
        type: array
    type: object
  ent.TypeRoom:
    properties:
      edges:
        $ref: '#/definitions/ent.TypeRoomEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the TypeRoomQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      type_name:
        description: TypeName holds the value of the "type_name" field.
        type: string
    type: object
  ent.TypeRoomEdges:
    properties:
      datarooms:
        description: Datarooms holds the value of the datarooms edge.
        items:
          $ref: '#/definitions/ent.DataRoom'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SE Example API
  version: "1.0"
paths:
  /CounterStaffs:
    get:
      description: list CounterStaff entities
      operationId: list-CounterStaff
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CounterStaff'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List CounterStaff entities
    post:
      consumes:
      - application/json
      description: Create CounterStaff
      operationId: create-CounterStaff
      parameters:
      - description: CounterStaff entity
        in: body
        name: CounterStaff
        required: true
        schema:
          $ref: '#/definitions/ent.CounterStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CounterStaff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create CounterStaff
  /CounterStaffs/{id}:
    delete:
      description: get CounterStaff by ID
      operationId: delete-CounterStaff
      parameters:
      - description: CounterStaff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a CounterStaff entity by ID
    get:
      description: get CounterStaff by ID
      operationId: get-CounterStaff
      parameters:
      - description: CounterStaff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CounterStaff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a CounterStaff entity by ID
    put:
      consumes:
      - application/json
      description: update CounterStaff by ID
      operationId: update-CounterStaff
      parameters:
      - description: CounterStaff ID
        in: path
        name: id
        required: true
        type: integer
      - description: CounterStaff entity
        in: body
        name: CounterStaff
        required: true
        schema:
          $ref: '#/definitions/ent.CounterStaff'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CounterStaff'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a CounterStaff entity by ID
  /Customers:
    get:
      description: list Customer entities
      operationId: list-Customer
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Customer'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List Customer entities
  /Customers/{id}:
    get:
      description: get Customer by ID
      operationId: get-Customer
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Customer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a Customer entity by ID
  /FurnitureDetailRooms/{id}:
    get:
      description: list FurnitureDetailRoom entities
      operationId: list-FurnitureDetailRoom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: FurnitureDetailRooms ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.FurnitureDetail'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List FurnitureDetailRoom entities
  /ReserveRooms:
    get:
      description: list ReserveRoom entities
      operationId: list-ReserveRoom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ReserveRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List ReserveRoom entities
    post:
      consumes:
      - application/json
      description: Create ReserveRoom
      operationId: create-ReserveRoom
      parameters:
      - description: ReserveRoom entity
        in: body
        name: ReserveRoom
        required: true
        schema:
          $ref: '#/definitions/ent.ReserveRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ReserveRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create ReserveRoom
  /ReserveRooms/{id}:
    delete:
      description: get ReserveRoom by ID
      operationId: delete-ReserveRoom
      parameters:
      - description: ReserveRooms ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a ReserveRoom entity by ID
    get:
      description: get ReserveRoom by ID
      operationId: get-ReserveRoom
      parameters:
      - description: ReserveRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ReserveRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a ReserveRoom entity by ID
    put:
      consumes:
      - application/json
      description: update ReserveRoom by ID
      operationId: update-ReserveRoom
      parameters:
      - description: ReserveRoom ID
        in: path
        name: id
        required: true
        type: integer
      - description: ReserveRoom entity
        in: body
        name: ReserveRoom
        required: true
        schema:
          $ref: '#/definitions/ent.ReserveRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ReserveRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a ReserveRoom entity by ID
  /ReserveRoomsCustomer/{id}:
    get:
      description: get ReserveRoomCustomer by ID
      operationId: get-ReserveRoomCustomer
      parameters:
      - description: ReserveRoomCustomer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ReserveRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a ReserveRoomCustomer entity by ID
  /checkins:
    get:
      description: list checkin entities
      operationId: list-checkin
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CheckIn'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List checkin entities
    post:
      consumes:
      - application/json
      description: Create checkin
      operationId: create-checkin
      parameters:
      - description: CheckIn entity
        in: body
        name: checkin
        required: true
        schema:
          $ref: '#/definitions/ent.CheckIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CheckIn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create checkin
  /checkins/{id}:
    delete:
      description: get checkin by ID
      operationId: delete-checkin
      parameters:
      - description: Checkin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a checkin entity by ID
    get:
      description: get checkin by ID
      operationId: get-checkin
      parameters:
      - description: Checkin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CheckIn'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a checkin entity by ID
    put:
      consumes:
      - application/json
      description: update Checkin by ID
      operationId: update-Checkin
      parameters:
      - description: Checkin ID
        in: path
        name: id
        required: true
        type: integer
      - description: CheckIn entity
        in: body
        name: Checkin
        required: true
        schema:
          $ref: '#/definitions/ent.CheckIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.CheckIn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a Checkin entity by ID
  /checkinstatuss:
    get:
      description: list  GetCheckInStatus entities
      operationId: list-GetCheckInStatus
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.CheckIn'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List  GetCheckInStatus entities
  /checkouts:
    get:
      description: list checkout entities
      operationId: list-checkout
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Checkout'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List checkout entities
    post:
      consumes:
      - application/json
      description: Create checkout
      operationId: create-checkout
      parameters:
      - description: Checkout entity
        in: body
        name: checkout
        required: true
        schema:
          $ref: '#/definitions/ent.Checkout'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Checkout'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create checkout
  /checkouts/{id}:
    delete:
      description: get checkout by ID
      operationId: delete-checkout
      parameters:
      - description: Checkout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a checkout entity by ID
    get:
      description: get checkout by ID
      operationId: get-checkout
      parameters:
      - description: Checkout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Checkout'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a checkout entity by ID
  /checkouts2/{id}:
    get:
      description: get GetCheckout2 by ID
      operationId: get-GetCheckout2
      parameters:
      - description: Checkout ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ReserveRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a GetCheckout2 entity by ID
  /dataroomcustomer/{id}:
    get:
      description: get dataroomcustomer by ID
      operationId: get-dataroomcustomer
      parameters:
      - description: dataroomcustomer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DataRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a dataroomcustomer entity by ID
  /dataroompromos/{id}:
    get:
      description: list DataRoomPromo entities by id
      operationId: list-DataRoomPromo
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: DataRoomPromo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.DataRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List DataRoomPromo entities by id
  /datarooms:
    get:
      description: list dataroom entities
      operationId: list-dataroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.DataRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List dataroom entities
    post:
      consumes:
      - application/json
      description: Create dataroom
      operationId: create-dataroom
      parameters:
      - description: DataRoom entity
        in: body
        name: dataroom
        required: true
        schema:
          $ref: '#/definitions/ent.DataRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DataRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create dataroom
  /datarooms/{id}:
    get:
      description: get dataroom by ID
      operationId: get-dataroom
      parameters:
      - description: DataRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DataRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a dataroom entity by ID
    put:
      consumes:
      - application/json
      description: update Dataroom by ID
      operationId: update-Dataroom
      parameters:
      - description: Dataroom ID
        in: path
        name: id
        required: true
        type: integer
      - description: Dataroom entity
        in: body
        name: Dataroom
        required: true
        schema:
          $ref: '#/definitions/ent.DataRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.DataRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a Dataroom entity by ID
  /fixrooms:
    get:
      description: list fixroom entities
      operationId: list-fixroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.FixRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List fixroom entities
    post:
      consumes:
      - application/json
      description: Create fixroom
      operationId: create-fixroom
      parameters:
      - description: FixRoom entity
        in: body
        name: fixroom
        required: true
        schema:
          $ref: '#/definitions/ent.FixRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.FixRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create fixroom
  /fixrooms/{id}:
    delete:
      description: get fixroom by ID
      operationId: delete-fixroom
      parameters:
      - description: FixRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a fixroom entity by ID
    get:
      description: get fixroom by ID
      operationId: get-fixroom
      parameters:
      - description: FixRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.FixRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a fixroom entity by ID
  /furnituredetails:
    get:
      description: list furnituredetail entities
      operationId: list-furnituredetail
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.FurnitureDetail'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List furnituredetail entities
    post:
      consumes:
      - application/json
      description: Create furnituredetail
      operationId: create-furnituredetail
      parameters:
      - description: FurnitureDetail entity
        in: body
        name: furnituredetail
        required: true
        schema:
          $ref: '#/definitions/ent.FurnitureDetail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.FurnitureDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create furnituredetail
  /furnituredetails/{id}:
    get:
      description: get furnituredetail by ID
      operationId: get-furnituredetail
      parameters:
      - description: FurnitureDetail ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.FurnitureDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a furnituredetail entity by ID
  /furnitures:
    get:
      description: list furniture entities
      operationId: list-furniture
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Furniture'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List furniture entities
  /furnitures/{id}:
    get:
      description: get furniture by ID
      operationId: get-furniture
      parameters:
      - description: Furniture ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Furniture'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a furniture entity by ID
  /furnituretypes:
    get:
      description: list furnituretype entities
      operationId: list-furnituretype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.FurnitureType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List furnituretype entities
  /furnituretypes/{id}:
    get:
      description: get furnituretype by ID
      operationId: get-furnituretype
      parameters:
      - description: Furnituretype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.FurnitureType'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a furnituretype entity by ID
  /promotions:
    get:
      description: list promotion entities
      operationId: list-promotion
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Promotion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List promotion entities
    post:
      consumes:
      - application/json
      description: Create promotion
      operationId: create-promotion
      parameters:
      - description: Promotion entity
        in: body
        name: promotion
        required: true
        schema:
          $ref: '#/definitions/ent.Promotion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Promotion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create promotion
  /promotions/{id}:
    get:
      description: get promotion by ID
      operationId: get-promotion
      parameters:
      - description: Promotion ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Promotion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a promotion entity by ID
  /statusReserves:
    get:
      description: list statusReserve entities
      operationId: list-statusReserve
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.StatusReserve'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statusReserve entities
    post:
      consumes:
      - application/json
      description: Create statusReserve
      operationId: create-statusReserve
      parameters:
      - description: StatusReserve entity
        in: body
        name: statusReserve
        required: true
        schema:
          $ref: '#/definitions/ent.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusReserve'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statusReserve
  /statusReserves/{id}:
    delete:
      description: get statusReserve by ID
      operationId: delete-statusReserve
      parameters:
      - description: StatusReserve ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statusReserve entity by ID
    get:
      description: get statusReserve by ID
      operationId: get-statusReserve
      parameters:
      - description: StatusReserve ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusReserve'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statusReserve entity by ID
  /statuscheckins:
    get:
      description: list statuscheckin entities
      operationId: list-statuscheckin
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.StatusCheckIn'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statuscheckin entities
    post:
      consumes:
      - application/json
      description: Create statuscheckin
      operationId: create-statuscheckin
      parameters:
      - description: StatusCheckin entity
        in: body
        name: statuscheckin
        required: true
        schema:
          $ref: '#/definitions/ent.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusCheckIn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statuscheckin
  /statuscheckins/{id}:
    delete:
      description: get statuscheckin by ID
      operationId: delete-statuscheckin
      parameters:
      - description: statuscheckin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statuscheckin entity by ID
    get:
      description: get statuscheckin by ID
      operationId: get-statuscheckin
      parameters:
      - description: statuscheckin ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusCheckIn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statuscheckin entity by ID
  /statusopinions:
    get:
      description: list statusopinion entities
      operationId: list-statusopinion
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.StatusOpinion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statusopinion entities
    post:
      consumes:
      - application/json
      description: Create statusopinion
      operationId: create-statusopinion
      parameters:
      - description: StatusOpinion entity
        in: body
        name: statusopinion
        required: true
        schema:
          $ref: '#/definitions/ent.StatusOpinion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusOpinion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statusopinion
  /statusopinions/{id}:
    delete:
      description: get statusopinion by ID
      operationId: delete-statusopinion
      parameters:
      - description: StatusOpinion ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a statusopinion entity by ID
    get:
      description: get statusopinion by ID
      operationId: get-statusopinion
      parameters:
      - description: StatusOpinion ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusOpinion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statusopinion entity by ID
  /statusrooms:
    get:
      description: list statusroom entities
      operationId: list-statusroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.StatusRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List statusroom entities
    post:
      consumes:
      - application/json
      description: Create statusroom
      operationId: create-statusroom
      parameters:
      - description: StatusRoom entity
        in: body
        name: statusroom
        required: true
        schema:
          $ref: '#/definitions/ent.StatusRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create statusroom
  /statusrooms/{id}:
    get:
      description: get statusroom by ID
      operationId: get-statusroom
      parameters:
      - description: StatusRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.StatusRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a statusroom entity by ID
  /statuss:
    get:
      description: list status entities
      operationId: list-status
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Status'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List status entities
    post:
      consumes:
      - application/json
      description: Create status
      operationId: create-status
      parameters:
      - description: Status entity
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/ent.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create status
  /statuss/{id}:
    delete:
      description: get status by ID
      operationId: delete-status
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a status entity by ID
    get:
      description: get status by ID
      operationId: get-status
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a status entity by ID
  /typerooms:
    get:
      description: list typeroom entities
      operationId: list-typeroom
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.TypeRoom'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List typeroom entities
    post:
      consumes:
      - application/json
      description: Create typeroom
      operationId: create-typeroom
      parameters:
      - description: TypeRoom entity
        in: body
        name: typeroom
        required: true
        schema:
          $ref: '#/definitions/ent.TypeRoom'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.TypeRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create typeroom
  /typerooms/{id}:
    get:
      description: get typeroom by ID
      operationId: get-typeroom
      parameters:
      - description: TypeRoom ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.TypeRoom'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a typeroom entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
