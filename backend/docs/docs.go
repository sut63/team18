// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/CounterStaffs": {
            "get": {
                "description": "list CounterStaff entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List CounterStaff entities",
                "operationId": "list-CounterStaff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.CounterStaff"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create CounterStaff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create CounterStaff",
                "operationId": "create-CounterStaff",
                "parameters": [
                    {
                        "description": "CounterStaff entity",
                        "name": "CounterStaff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.CounterStaff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CounterStaff"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/CounterStaffs/{id}": {
            "get": {
                "description": "get CounterStaff by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a CounterStaff entity by ID",
                "operationId": "get-CounterStaff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CounterStaff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CounterStaff"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update CounterStaff by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a CounterStaff entity by ID",
                "operationId": "update-CounterStaff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CounterStaff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CounterStaff entity",
                        "name": "CounterStaff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.CounterStaff"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CounterStaff"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get CounterStaff by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a CounterStaff entity by ID",
                "operationId": "delete-CounterStaff",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CounterStaff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Customers": {
            "get": {
                "description": "list Customer entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List Customer entities",
                "operationId": "list-Customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Customers/{id}": {
            "get": {
                "description": "get Customer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Customer entity by ID",
                "operationId": "get-Customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Customer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/FixRoomDataRoom/{id}": {
            "get": {
                "description": "get FixRoomDataRoom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a FixRoomDataRoom entity by ID",
                "operationId": "get-FixRoomDataRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "FixRoomDataRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.FixRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/FurnitureDetailRooms/{id}": {
            "get": {
                "description": "list FurnitureDetailRoom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List FurnitureDetailRoom entities",
                "operationId": "list-FurnitureDetailRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "FurnitureDetailRooms ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.FurnitureDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ReserveRooms": {
            "get": {
                "description": "list ReserveRoom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List ReserveRoom entities",
                "operationId": "list-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ReserveRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ReserveRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ReserveRoom",
                "operationId": "create-ReserveRoom",
                "parameters": [
                    {
                        "description": "ReserveRoom entity",
                        "name": "ReserveRoom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ReserveRooms/{id}": {
            "get": {
                "description": "get ReserveRoom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a ReserveRoom entity by ID",
                "operationId": "get-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update ReserveRoom by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a ReserveRoom entity by ID",
                "operationId": "update-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ReserveRoom entity",
                        "name": "ReserveRoom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get ReserveRoom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a ReserveRoom entity by ID",
                "operationId": "delete-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRooms ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ReserveRoomsCustomer/{id}": {
            "get": {
                "description": "get ReserveRoomCustomer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a ReserveRoomCustomer entity by ID",
                "operationId": "get-ReserveRoomCustomer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRoomCustomer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ReserveRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checkins": {
            "get": {
                "description": "list checkin entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List checkin entities",
                "operationId": "list-checkin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.CheckIn"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create checkin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create checkin",
                "operationId": "create-checkin",
                "parameters": [
                    {
                        "description": "CheckIn entity",
                        "name": "checkin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.CheckIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CheckIn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checkins/{id}": {
            "get": {
                "description": "get checkin by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a checkin entity by ID",
                "operationId": "get-checkin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checkin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.CheckIn"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update Checkin by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Checkin entity by ID",
                "operationId": "update-Checkin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checkin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CheckIn entity",
                        "name": "Checkin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.CheckIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.CheckIn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get checkin by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a checkin entity by ID",
                "operationId": "delete-checkin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checkin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checkinstatuss": {
            "get": {
                "description": "list  GetCheckInStatus entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List  GetCheckInStatus entities",
                "operationId": "list-GetCheckInStatus",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.CheckIn"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checkouts": {
            "get": {
                "description": "list checkout entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List checkout entities",
                "operationId": "list-checkout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Checkout"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create checkout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create checkout",
                "operationId": "create-checkout",
                "parameters": [
                    {
                        "description": "Checkout entity",
                        "name": "checkout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Checkout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Checkout"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checkouts/{id}": {
            "get": {
                "description": "get checkout by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a checkout entity by ID",
                "operationId": "get-checkout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checkout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Checkout"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get checkout by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a checkout entity by ID",
                "operationId": "delete-checkout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checkout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/checkouts2/{id}": {
            "get": {
                "description": "get GetCheckout2 by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a GetCheckout2 entity by ID",
                "operationId": "get-GetCheckout2",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Checkout ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dataroombypromos/{id}": {
            "get": {
                "description": "get GetDataRoombyPromotion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a GetDataRoombyPromotion entity by ID",
                "operationId": "get-GetDataRoombyPromotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GetDataRoombyPromotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.DataRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dataroomcustomer/{id}": {
            "get": {
                "description": "get dataroomcustomer by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a dataroomcustomer entity by ID",
                "operationId": "get-dataroomcustomer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "dataroomcustomer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DataRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/dataroompromos/{id}": {
            "get": {
                "description": "list DataRoomPromo entities by id",
                "produces": [
                    "application/json"
                ],
                "summary": "List DataRoomPromo entities by id",
                "operationId": "list-DataRoomPromo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "DataRoomPromo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.DataRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/datarooms": {
            "get": {
                "description": "list dataroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List dataroom entities",
                "operationId": "list-dataroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.DataRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create dataroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create dataroom",
                "operationId": "create-dataroom",
                "parameters": [
                    {
                        "description": "DataRoom entity",
                        "name": "dataroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.DataRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DataRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/datarooms/{id}": {
            "get": {
                "description": "get dataroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a dataroom entity by ID",
                "operationId": "get-dataroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "DataRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DataRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update Dataroom by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Dataroom entity by ID",
                "operationId": "update-Dataroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataroom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataroom entity",
                        "name": "Dataroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.DataRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.DataRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixrooms": {
            "get": {
                "description": "list fixroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List fixroom entities",
                "operationId": "list-fixroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.FixRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create fixroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create fixroom",
                "operationId": "create-fixroom",
                "parameters": [
                    {
                        "description": "FixRoom entity",
                        "name": "fixroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.FixRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.FixRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/fixrooms/{id}": {
            "get": {
                "description": "get fixroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a fixroom entity by ID",
                "operationId": "get-fixroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "FixRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.FixRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get fixroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a fixroom entity by ID",
                "operationId": "delete-fixroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "FixRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/furnituredetails": {
            "get": {
                "description": "list furnituredetail entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List furnituredetail entities",
                "operationId": "list-furnituredetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.FurnitureDetail"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create furnituredetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create furnituredetail",
                "operationId": "create-furnituredetail",
                "parameters": [
                    {
                        "description": "FurnitureDetail entity",
                        "name": "furnituredetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.FurnitureDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.FurnitureDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/furnituredetails/{id}": {
            "get": {
                "description": "get furnituredetail by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a furnituredetail entity by ID",
                "operationId": "get-furnituredetail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "FurnitureDetail ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.FurnitureDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/furnitures": {
            "get": {
                "description": "list furniture entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List furniture entities",
                "operationId": "list-furniture",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Furniture"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/furnitures/{id}": {
            "get": {
                "description": "get furniture by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a furniture entity by ID",
                "operationId": "get-furniture",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Furniture ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Furniture"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/furnituretypes": {
            "get": {
                "description": "list furnituretype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List furnituretype entities",
                "operationId": "list-furnituretype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.FurnitureType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/furnituretypes/{id}": {
            "get": {
                "description": "get furnituretype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a furnituretype entity by ID",
                "operationId": "get-furnituretype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Furnituretype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.FurnitureType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotions": {
            "get": {
                "description": "list promotion entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List promotion entities",
                "operationId": "list-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Promotion"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create promotion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create promotion",
                "operationId": "create-promotion",
                "parameters": [
                    {
                        "description": "Promotion entity",
                        "name": "promotion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/promotions/{id}": {
            "get": {
                "description": "get promotion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a promotion entity by ID",
                "operationId": "get-promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Promotion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Promotion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusReserves": {
            "get": {
                "description": "list statusReserve entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statusReserve entities",
                "operationId": "list-statusReserve",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.StatusReserve"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statusReserve",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statusReserve",
                "operationId": "create-statusReserve",
                "parameters": [
                    {
                        "description": "StatusReserve entity",
                        "name": "statusReserve",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusReserve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusReserves/{id}": {
            "get": {
                "description": "get statusReserve by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statusReserve entity by ID",
                "operationId": "get-statusReserve",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusReserve ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusReserve"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get statusReserve by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a statusReserve entity by ID",
                "operationId": "delete-statusReserve",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusReserve ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuscheckins": {
            "get": {
                "description": "list statuscheckin entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statuscheckin entities",
                "operationId": "list-statuscheckin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.StatusCheckIn"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statuscheckin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statuscheckin",
                "operationId": "create-statuscheckin",
                "parameters": [
                    {
                        "description": "StatusCheckin entity",
                        "name": "statuscheckin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusCheckIn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuscheckins/{id}": {
            "get": {
                "description": "get statuscheckin by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statuscheckin entity by ID",
                "operationId": "get-statuscheckin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "statuscheckin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusCheckIn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get statuscheckin by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a statuscheckin entity by ID",
                "operationId": "delete-statuscheckin",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "statuscheckin ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusopinions": {
            "get": {
                "description": "list statusopinion entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statusopinion entities",
                "operationId": "list-statusopinion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.StatusOpinion"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statusopinion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statusopinion",
                "operationId": "create-statusopinion",
                "parameters": [
                    {
                        "description": "StatusOpinion entity",
                        "name": "statusopinion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.StatusOpinion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusOpinion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusopinions/{id}": {
            "get": {
                "description": "get statusopinion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statusopinion entity by ID",
                "operationId": "get-statusopinion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusOpinion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusOpinion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get statusopinion by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a statusopinion entity by ID",
                "operationId": "delete-statusopinion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusOpinion ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusrooms": {
            "get": {
                "description": "list statusroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List statusroom entities",
                "operationId": "list-statusroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.StatusRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create statusroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create statusroom",
                "operationId": "create-statusroom",
                "parameters": [
                    {
                        "description": "StatusRoom entity",
                        "name": "statusroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.StatusRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statusrooms/{id}": {
            "get": {
                "description": "get statusroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a statusroom entity by ID",
                "operationId": "get-statusroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "StatusRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.StatusRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuss": {
            "get": {
                "description": "list status entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List status entities",
                "operationId": "list-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Status"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create status",
                "operationId": "create-status",
                "parameters": [
                    {
                        "description": "Status entity",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuss/{id}": {
            "get": {
                "description": "get status by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a status entity by ID",
                "operationId": "get-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get status by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a status entity by ID",
                "operationId": "delete-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typerooms": {
            "get": {
                "description": "list typeroom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List typeroom entities",
                "operationId": "list-typeroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.TypeRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create typeroom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create typeroom",
                "operationId": "create-typeroom",
                "parameters": [
                    {
                        "description": "TypeRoom entity",
                        "name": "typeroom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.TypeRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.TypeRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/typerooms/{id}": {
            "get": {
                "description": "get typeroom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a typeroom entity by ID",
                "operationId": "get-typeroom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "TypeRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.TypeRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ent.CheckIn": {
            "type": "object",
            "properties": {
                "checkin_date": {
                    "description": "CheckinDate holds the value of the \"checkin_date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CheckInQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CheckInEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "mobile_key": {
                    "description": "MobileKey holds the value of the \"mobile_key\" field.",
                    "type": "string"
                },
                "person_number": {
                    "description": "PersonNumber holds the value of the \"person_number\" field.",
                    "type": "string"
                },
                "phone_number": {
                    "description": "PhoneNumber holds the value of the \"phone_number\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CheckInEdges": {
            "type": "object",
            "properties": {
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Checkout"
                },
                "counter": {
                    "description": "Counter holds the value of the counter edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaff"
                },
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "dataroom": {
                    "description": "Dataroom holds the value of the dataroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                },
                "reserveroom": {
                    "description": "Reserveroom holds the value of the reserveroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ReserveRoom"
                },
                "status": {
                    "description": "Status holds the value of the status edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusCheckIn"
                }
            }
        },
        "ent.Checkout": {
            "type": "object",
            "properties": {
                "checkout_date": {
                    "description": "CheckoutDate holds the value of the \"checkout_date\" field.",
                    "type": "string"
                },
                "comment": {
                    "description": "Comment holds the value of the \"comment\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CheckoutQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CheckoutEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "identity_card": {
                    "description": "IdentityCard holds the value of the \"identity_card\" field.",
                    "type": "string"
                },
                "price": {
                    "description": "Price holds the value of the \"price\" field.",
                    "type": "number"
                }
            }
        },
        "ent.CheckoutEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CheckIn"
                },
                "counterstaffs": {
                    "description": "Counterstaffs holds the value of the counterstaffs edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaff"
                },
                "statusopinion": {
                    "description": "Statusopinion holds the value of the statusopinion edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusOpinion"
                },
                "statuss": {
                    "description": "Statuss holds the value of the statuss edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Status"
                }
            }
        },
        "ent.CounterStaff": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CounterStaffQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaffEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CounterStaffEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checkout"
                    }
                },
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                }
            }
        },
        "ent.Customer": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CustomerQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CustomerEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CustomerEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "fixs": {
                    "description": "Fixs holds the value of the fixs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FixRoom"
                    }
                },
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                }
            }
        },
        "ent.DataRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DataRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "price": {
                    "description": "Price holds the value of the \"price\" field.",
                    "type": "number"
                },
                "roomdetail": {
                    "description": "Roomdetail holds the value of the \"roomdetail\" field.",
                    "type": "string"
                },
                "roomnumber": {
                    "description": "Roomnumber holds the value of the \"roomnumber\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DataRoomEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                },
                "fixs": {
                    "description": "Fixs holds the value of the fixs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FixRoom"
                    }
                },
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotion"
                },
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                },
                "statusroom": {
                    "description": "Statusroom holds the value of the statusroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusRoom"
                },
                "typeroom": {
                    "description": "Typeroom holds the value of the typeroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypeRoom"
                }
            }
        },
        "ent.FixRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FixRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FixRoomEdges"
                },
                "facebook": {
                    "description": "Facebook holds the value of the \"facebook\" field.",
                    "type": "string"
                },
                "fix_detail": {
                    "description": "FixDetail holds the value of the \"fix_detail\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "phone_number": {
                    "description": "PhoneNumber holds the value of the \"phone_number\" field.",
                    "type": "string"
                }
            }
        },
        "ent.FixRoomEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "furnitureDetail": {
                    "description": "FurnitureDetail holds the value of the furnitureDetail edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureDetail"
                },
                "room": {
                    "description": "Room holds the value of the room edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                }
            }
        },
        "ent.Furniture": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FurnitureQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureEdges"
                },
                "furniture_name": {
                    "description": "FurnitureName holds the value of the \"furniture_name\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FurnitureDetail": {
            "type": "object",
            "properties": {
                "date_add": {
                    "description": "DateAdd holds the value of the \"date_add\" field.",
                    "type": "string"
                },
                "detail": {
                    "description": "Detail holds the value of the \"detail\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FurnitureDetailQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureDetailEdges"
                },
                "furniture_amount": {
                    "description": "FurnitureAmount holds the value of the \"furniture_amount\" field.",
                    "type": "integer"
                },
                "furniture_colour": {
                    "description": "FurnitureColour holds the value of the \"furniture_colour\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FurnitureDetailEdges": {
            "type": "object",
            "properties": {
                "counterstaffs": {
                    "description": "Counterstaffs holds the value of the counterstaffs edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaff"
                },
                "fixs": {
                    "description": "Fixs holds the value of the fixs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FixRoom"
                    }
                },
                "furnitures": {
                    "description": "Furnitures holds the value of the furnitures edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Furniture"
                },
                "rooms": {
                    "description": "Rooms holds the value of the rooms edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                },
                "types": {
                    "description": "Types holds the value of the types edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureType"
                }
            }
        },
        "ent.FurnitureEdges": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                }
            }
        },
        "ent.FurnitureType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FurnitureTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureTypeEdges"
                },
                "furniture_type": {
                    "description": "FurnitureType holds the value of the \"furniture_type\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FurnitureTypeEdges": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                }
            }
        },
        "ent.Promotion": {
            "type": "object",
            "properties": {
                "discount": {
                    "description": "Discount holds the value of the \"discount\" field.",
                    "type": "number"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PromotionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PromotionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "promotion_name": {
                    "description": "PromotionName holds the value of the \"promotion_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PromotionEdges": {
            "type": "object",
            "properties": {
                "datarooms": {
                    "description": "Datarooms holds the value of the datarooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DataRoom"
                    }
                },
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                }
            }
        },
        "ent.ReserveRoom": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount holds the value of the \"amount\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ReserveRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ReserveRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "net_price": {
                    "description": "NetPrice holds the value of the \"net_price\" field.",
                    "type": "number"
                },
                "phone_number": {
                    "description": "PhoneNumber holds the value of the \"phone_number\" field.",
                    "type": "string"
                },
                "request": {
                    "description": "Request holds the value of the \"request\" field.",
                    "type": "string"
                },
                "reserve_date": {
                    "description": "ReserveDate holds the value of the \"reserve_date\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ReserveRoomEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotion"
                },
                "room": {
                    "description": "Room holds the value of the room edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                },
                "status": {
                    "description": "Status holds the value of the status edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusReserve"
                }
            }
        },
        "ent.Status": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.StatusCheckIn": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusCheckInQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusCheckInEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "status_name": {
                    "description": "StatusName holds the value of the \"status_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusCheckInEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                }
            }
        },
        "ent.StatusEdges": {
            "type": "object",
            "properties": {
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checkout"
                    }
                }
            }
        },
        "ent.StatusOpinion": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusOpinionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusOpinionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "opinion": {
                    "description": "Opinion holds the value of the \"opinion\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusOpinionEdges": {
            "type": "object",
            "properties": {
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checkout"
                    }
                }
            }
        },
        "ent.StatusReserve": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusReserveQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusReserveEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "status_name": {
                    "description": "StatusName holds the value of the \"status_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusReserveEdges": {
            "type": "object",
            "properties": {
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                }
            }
        },
        "ent.StatusRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "status_name": {
                    "description": "StatusName holds the value of the \"status_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusRoomEdges": {
            "type": "object",
            "properties": {
                "datarooms": {
                    "description": "Datarooms holds the value of the datarooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DataRoom"
                    }
                }
            }
        },
        "ent.TypeRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TypeRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypeRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "type_name": {
                    "description": "TypeName holds the value of the \"type_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TypeRoomEdges": {
            "type": "object",
            "properties": {
                "datarooms": {
                    "description": "Datarooms holds the value of the datarooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DataRoom"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SE Example API",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
